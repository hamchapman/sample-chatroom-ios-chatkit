//
//  SignupInteractor.swift
//  words
//
//  Created by Neo Ighodaro on 09/12/2017.
//  Copyright (c) 2017 CreativityKills Co.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignupBusinessLogic {
    func createAccount(request: Signup.Request)
}

class SignupInteractor: SignupBusinessLogic {
    
    // MARK: Properties
    
    var viewController: SignupFormErrorLogic?
    var router: (NSObjectProtocol & SignupRoutingLogic)?
    var worker: UsersWorker = UsersWorker(usersStore: UsersAPI())

    // MARK: Create Account
    
    func createAccount(request: Signup.Request) -> Void {
        self.worker.signup(request: request) { (user, signupError) in
            if signupError != nil {
                self.viewController?.showValidationError("Unable to create account, try again later!")
                return
            }
            
            let loginRequest = Login.Account.Request(email: request.email, password: request.password)
            
            self.worker.login(request: loginRequest) { (userToken, loginError) in
                UserTokenDataStore().setToken(userToken!)
                
                let chatkitTokenRequest = Login.Chatkit.Request(username: request.email, password: request.password, token: userToken!)
                
                self.worker.fetchChatkitToken(request: chatkitTokenRequest) { (chatkitToken, chatkitTokenError) in
                    if chatkitTokenError == nil {
                        ChatkitTokenDataStore().setToken(chatkitToken!)
                        self.router?.routeToListMessages()
                    } else {
                        self.viewController?.showValidationError("An error occurred while logging in.")
                    }
                }
            }
        }
    }
}
