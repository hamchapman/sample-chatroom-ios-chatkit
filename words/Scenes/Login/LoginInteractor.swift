//
//  LoginInteractor.swift
//  words
//
//  Created by Neo Ighodaro on 09/12/2017.
//  Copyright (c) 2017 CreativityKills Co.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func login(request: Login.Account.Request)
}

class LoginInteractor: LoginBusinessLogic {

    // MARK: Properties
    
    var viewController: LoginFormErrorLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic)?
    var worker: UsersWorker = UsersWorker(usersStore: UsersAPI())

    // MARK: Login
    
    func login(request: Login.Account.Request) {
        self.worker.login(request: Login.Account.Request(email: request.email, password: request.password)) { (userToken, loginError) in
            if loginError != nil {
                self.viewController?.showValidationError("An error occurred while logging in.")
                return
            }

            UserTokenDataStore().setToken(userToken!)
            
            let chatkitTokenRequest = Login.Chatkit.Request(username: request.email, password: request.password, token: userToken!)
            
            self.worker.fetchChatkitToken(request: chatkitTokenRequest) { (chatkitToken, chatkitTokenError) in
                if chatkitTokenError != nil {
                    self.viewController?.showValidationError("An error occurred while logging in.")
                    return
                }
                
                ChatkitTokenDataStore().setToken(chatkitToken!)
                self.router?.routeToListMessages()
            }
        }
    }
}
