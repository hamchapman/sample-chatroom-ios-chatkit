//
//  LoginViewController.swift
//  words
//
//  Created by Neo Ighodaro on 09/12/2017.
//  Copyright (c) 2017 CreativityKills Co.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginFormErrorLogic: class {
    func showValidationError(_ message: String)
}

class LoginViewController: UIViewController, LoginFormErrorLogic {

    // MARK: Properties
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let router = LoginRouter()
        let interactor = LoginInteractor()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.router = router
        interactor.viewController = viewController
        router.viewController = viewController
    }
    
    // MARK: Input fields
    
    @IBOutlet weak var emailTextField: AuthTextField!
    @IBOutlet weak var passwordTextField: AuthTextField!

    // MARK: Actions

    @IBAction func cancelButtonPressed(_ sender: Any) {
        self.dismiss(animated: true, completion: nil)
    }
    
    @IBAction func loginButtonPressed(_ sender: Any) {
        let request = Login.Account.Request(email: emailTextField.text!, password: passwordTextField.text!)
        interactor?.login(request: request)
    }
    
    func showValidationError(_ message: String) {
        let alert = UIAlertController(title: "Error logging in", message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Ok", style: .cancel, handler: nil))
        self.show(alert, sender: self)
    }
}
