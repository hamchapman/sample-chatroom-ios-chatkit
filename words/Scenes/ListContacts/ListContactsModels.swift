//
//  ListContactsModels.swift
//  words
//
//  Created by Neo Ighodaro on 09/12/2017.
//  Copyright (c) 2017 CreativityKills Co.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PusherChatkit

enum ListContacts
{
    enum AddContact
    {
        struct Request
        {
            var user_id: String
        }
        
        struct Response
        {
            var contact: Contact
            
            init(data: [String:Any]) {
                self.contact = ParseContact(data: data).contact
            }
        }
        
        struct ViewModel
        {
            var contact: FetchContacts.ViewModel.DisplayedContact
        }
    }
    
    enum FetchContacts
    {
        struct Request
        {
        }
    
        struct Response
        {
            var contacts: [Contact] = []
            
            init(data: [[String: Any]?]?) {
                for datum in data! {
                    self.contacts.append(ParseContact(data: datum!).contact)
                }
            }
        }
    
        struct ViewModel
        {
            struct DisplayedContact
            {
                var name: String
                var isOnline: Bool
            }
            
            var displayedContacts: [DisplayedContact]
        }
    }
    
    struct ParseContact
    {
        var contact: Contact
        
        init(data: [String:Any]) {
            let user = User(
                id: data["id"] as! Int,
                name: data["name"] as! String,
                email: data["email"] as! String,
                chatkit_id: data["chatkit_id"] as! String
            )
            
            let roomObject = data["room"] as! [String:Any]
            
            let room = PCRoom(
                id: roomObject["id"] as! Int,
                name: roomObject["name"] as! String,
                isPrivate: roomObject["private"] as! Bool,
                createdByUserId: roomObject["created_by_id"] as! String,
                createdAt: roomObject["created_at"] as! String,
                updatedAt: roomObject["updated_at"] as! String
            )
            
            self.contact = Contact(user: user, room: room)
        }
    }
}
